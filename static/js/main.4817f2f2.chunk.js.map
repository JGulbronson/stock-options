{"version":3,"sources":["App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","display","graph","flexGrow","controls","width","marginTop","lineChart","marginLeft","marginRight","App","classes","useState","numberOfOptions","setNumberOfOptions","preferredPrice","setPreferredPrice","data","name","amount","Container","fixed","className","height","formatter","value","Intl","NumberFormat","format","type","dataKey","stroke","Box","m","TextField","label","onChange","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAaMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,SAAU,GAEZC,SAAU,CACRC,MAAO,IACPC,UAAW,IAEbC,UAAW,CACTC,WAAY,OACZC,YAAa,UA8DFC,EA1DH,WACV,IAAMC,EAAUb,IADA,EAG8Bc,mBAAS,KAHvC,mBAGTC,EAHS,KAGQC,EAHR,OAI4BF,mBAAS,GAJrC,mBAITG,EAJS,KAIOC,EAJP,KAMVC,EAAO,CACX,CAAEC,KAAM,QAASC,OAAQ,GACzB,CAAED,KAAM,SAAUC,OAASN,EAAkB,EAAKE,GAClD,CAAEG,KAAM,SAAUC,OAASN,EAAkB,EAAKE,GAClD,CAAEG,KAAM,SAAUC,OAASN,EAAkB,EAAK,EAAIE,GACtD,CAAEG,KAAM,SAAUC,OAAQN,EAAkBE,IAG9C,OACE,kBAACK,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAWX,EAAQX,MAClC,yBAAKsB,UAAWX,EAAQT,OACtB,kBAAC,IAAD,CACEG,MAAO,IACPkB,OAAQ,IACRN,KAAMA,EACNK,UAAWX,EAAQJ,WAEnB,kBAAC,IAAD,CACEiB,UAAW,SAACC,GAAD,OAAW,IAAIC,KAAKC,aAAa,MAAMC,QAAQH,MAE5D,kBAAC,IAAD,CAAMI,KAAK,WAAWC,QAAQ,SAASC,OAAO,YAC9C,kBAAC,IAAD,CAAeA,OAAO,SACtB,kBAAC,IAAD,CAAOD,QAAQ,SACf,kBAAC,IAAD,CAAOD,KAAK,SAASxB,MAAO,QAGhC,kBAAC2B,EAAA,EAAD,CAAKV,UAAWX,EAAQP,UACtB,kBAAC4B,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CACEC,MAAM,oBACNN,KAAK,SACLJ,MAAOZ,EACPuB,SAAU,SAACC,GACTvB,GAAoBuB,EAAEC,OAAOb,WAInC,kBAACO,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,CACEC,MAAM,kBACNN,KAAK,SACLJ,MAAOV,EACPqB,SAAU,SAACC,GACTrB,GAAmBqB,EAAEC,OAAOb,cC1E1Cc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4817f2f2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, Container, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  CartesianGrid,\n  Label,\n  Line,\n  LineChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n  },\n  graph: {\n    flexGrow: 1,\n  },\n  controls: {\n    width: 200,\n    marginTop: 20,\n  },\n  lineChart: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [numberOfOptions, setNumberOfOptions] = useState(100);\n  const [preferredPrice, setPreferredPrice] = useState(1);\n\n  const data = [\n    { name: \"Start\", amount: 0 },\n    { name: \"Year 1\", amount: (numberOfOptions / 4) * preferredPrice },\n    { name: \"Year 2\", amount: (numberOfOptions / 2) * preferredPrice },\n    { name: \"Year 3\", amount: (numberOfOptions / 4) * 3 * preferredPrice },\n    { name: \"Year 4\", amount: numberOfOptions * preferredPrice },\n  ];\n\n  return (\n    <Container fixed className={classes.root}>\n      <div className={classes.graph}>\n        <LineChart\n          width={700}\n          height={450}\n          data={data}\n          className={classes.lineChart}\n        >\n          <Tooltip\n            formatter={(value) => new Intl.NumberFormat(\"en\").format(+value)}\n          />\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#8884d8\" />\n          <CartesianGrid stroke=\"#ccc\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis type=\"number\" width={100} />\n        </LineChart>\n      </div>\n      <Box className={classes.controls}>\n        <Box m={2}>\n          <TextField\n            label=\"Number of options\"\n            type=\"number\"\n            value={numberOfOptions}\n            onChange={(e) => {\n              setNumberOfOptions(+e.target.value);\n            }}\n          />\n        </Box>\n        <Box m={2}>\n          <TextField\n            label=\"Preferred Price\"\n            type=\"number\"\n            value={preferredPrice}\n            onChange={(e) => {\n              setPreferredPrice(+e.target.value);\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}